#!/bin/bash

set -e
set -o pipefail

CERTS_DIR="./certs"

echo "===== Initializing Project Setup ====="

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Openssl ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ! command -v openssl &> /dev/null; then
    echo "Error: openssl is not installed. Please install it and try again."
    exit 1
fi

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå certs ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
if [ ! -d "$CERTS_DIR" ]; then
    mkdir "$CERTS_DIR"
    echo "üìÅ Created directory for certificates: $CERTS_DIR"
else
    echo "üìÅ Certificates directory exists: $CERTS_DIR"
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á SSL/TLS
if [ ! -f "$CERTS_DIR/server.key" ] || [ ! -f "$CERTS_DIR/server.crt" ] || [ ! -f "$CERTS_DIR/root.crt" ]; then
    echo "üîë Generating SSL Certificates..."

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Private Key
    openssl genrsa -out "$CERTS_DIR/server.key" 2048
    chmod u=rw,g=,o= "$CERTS_DIR/server.key"  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    echo "‚úîÔ∏è  Server private key generated: $CERTS_DIR/server.key"

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Certificate Signing Request (CSR)
    openssl req -new -key "$CERTS_DIR/server.key" -out "$CERTS_DIR/server.csr" \
      -subj "/CN=localhost"
    echo "‚úîÔ∏è  CSR generated: $CERTS_DIR/server.csr"

    # ‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö Certificate ‡πÄ‡∏õ‡πá‡∏ô Self-signed
    openssl x509 -req -days 365 -in "$CERTS_DIR/server.csr" \
      -signkey "$CERTS_DIR/server.key" -out "$CERTS_DIR/server.crt"
    chmod u=rwx,g=r,o=r "$CERTS_DIR/server.crt"  # ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ `user` ‡πÅ‡∏•‡∏∞ `group` ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ
    echo "‚úîÔ∏è  Self-signed certificate generated: $CERTS_DIR/server.crt"

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Root Certificate
    cp "$CERTS_DIR/server.crt" "$CERTS_DIR/root.crt"
    chmod u=rwx,g=r,o=r "$CERTS_DIR/root.crt"  # ‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏±‡∏ö user/group/others
    echo "‚úîÔ∏è  Root certificate generated: $CERTS_DIR/root.crt"

    # ‡∏•‡∏ö CSR ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    rm "$CERTS_DIR/server.csr"
    echo "‚úîÔ∏è  Temporary CSR removed."
else
    echo "‚úîÔ∏è  SSL Certificates already exist, skipping creation step."
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Docker ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ! command -v docker &> /dev/null; then
    echo "Error: Docker is not installed. Please install it and try again."
    exit 1
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Docker ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ! docker info > /dev/null 2>&1; then
    echo "Error: Docker is not running. Please start it and try again."
    exit 1
fi

# ‡∏£‡∏±‡∏ô Docker Compose Services
echo "üöÄ Starting Docker Compose..."
docker-compose down > /dev/null 2>&1 || true  # ‡∏´‡∏¢‡∏∏‡∏î container ‡πÄ‡∏Å‡πà‡∏≤‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
docker compose up -d actix-db actix-app
echo "‚úîÔ∏è  Docker Compose services are up and running."

echo "===== Setup Completed Successfully! ====="